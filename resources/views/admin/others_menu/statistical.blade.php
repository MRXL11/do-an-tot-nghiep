@extends('admin.layouts.AdminLayouts')
@section('title-page')
@endsection
@section('content')
    <div class="container-fluid">

        {{-- ƒë∆°n ƒë∆∞·ª£c y√™u c·∫ßu tr·∫£ h√†ng/ho√†n ti·ªÅn --}}
        <div class="row mb-3">
            <div class="col-lg-9">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <!-- Ti√™u ƒë·ªÅ -->
                        <div class="row mb-4">
                            <div class="col d-flex justify-content-between">
                                <h4 class="fw-bold">Y√™u c·∫ßu tr·∫£ h√†ng / ho√†n ti·ªÅn m·ªõi nh·∫•t ƒëang ch·ªù x·ª≠ l√Ω</h4>
                                <a href='{{ route('admin.orders.index') }}'
                                    class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">
                                    Xem t·∫•t c·∫£</a>
                            </div>
                        </div>

                        <div style="max-height: 100px; overflow-y: auto;">
                            <table class="table table-striped align-middle mb-0">
                                <thead id="returnRequestsHead">
                                    <!-- S·∫Ω ƒë∆∞·ª£c render b·∫±ng JS -->
                                </thead>
                                <tbody id="returnRequestsBody">
                                    <!-- D·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c render b·∫±ng JS -->
                                </tbody>
                            </table>
                            <div class="text-center py-2 text-muted" id="noReturnRequests" style="display: none;">
                                Kh√¥ng c√≥ y√™u c·∫ßu .
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3">
                <div class="card shadow-sm border-0 mb-4">
                    <div class="card-body">
                        <h5 class="fw-bold mb-3">üîî Th√¥ng b√°o h√¥m nay</h5>

                        <div id="notificationsCarousel" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner" id="carouselNotificationInner">
                                <!-- C√°c th√¥ng b√°o s·∫Ω ƒë∆∞·ª£c th√™m b·∫±ng JS -->
                            </div>

                            <!-- N√∫t ƒëi·ªÅu h∆∞·ªõng -->
                            <button class="carousel-control-prev" type="button" data-bs-target="#notificationsCarousel"
                                data-bs-slide="prev">
                                <span class="visually-hidden">Tr∆∞·ªõc</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#notificationsCarousel"
                                data-bs-slide="next">
                                <span class="visually-hidden">Sau</span>
                            </button>
                        </div>

                        <div class="text-center text-muted mt-3" id="noNotifications" style="display: none;">
                            Kh√¥ng c√≥ th√¥ng b√°o.
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-lg-12">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        {{-- Ti√™u ƒë·ªÅ --}}
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h4 class="fw-bold mb-0">
                                <i class="bi bi-x-circle text-danger me-2"></i>
                                Y√™u c·∫ßu hu·ª∑ ƒë∆°n m·ªõi t·ª´ kh√°ch
                            </h4>
                        </div>

                        {{-- B·∫£ng y√™u c·∫ßu hu·ª∑ ƒë∆°n --}}
                        <div style="max-height: 200px; overflow-y: auto;">
                            <table class="table table-hover table-bordered align-middle mb-0">
                                <thead class="table-light" id="cancelRequestTableHead">
                                    {{-- Render b·∫±ng JavaScript --}}
                                </thead>
                                <tbody id="cancelRequestTableBody">
                                    {{-- Render b·∫±ng JavaScript --}}
                                </tbody>
                            </table>

                            {{-- Th√¥ng b√°o khi kh√¥ng c√≥ d·ªØ li·ªáu --}}
                            <div class="text-center py-3 text-muted fst-italic" id="cancelRequestNoData"
                                style="display: none;">
                                Hi·ªán ch∆∞a ghi nh·∫≠n y√™u c·∫ßu hu·ª∑ ƒë∆°n m·ªõi.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        {{-- B·ªô l·ªçc & bi·ªÉu ƒë·ªì --}}
        <div class="row mb-3">
            {{-- Bi·ªÉu ƒë·ªì doanh thu --}}
            <div class="col-12">
                {{-- begin::doanh thu va loi nhuan --}}
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        {{-- doanh thu v√† l·ª£i nhu·∫≠n --}}
                        <div class="row mb-2 mt-2">
                            <div class="col text-center">
                                <h2 class="fw-bold text-primary" id="revenue-title">
                                    <i class="bi bi-graph-up-arrow me-2"></i> Doanh thu & L·ª£i nhu·∫≠n
                                </h2>
                            </div>
                        </div>

                        {{-- Thanh th√¥ng tin v√† b·ªô l·ªçc --}}
                        <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-3">
                            {{-- T·ªïng doanh thu v√† l·ª£i nhu·∫≠n --}}
                            <div>
                                <h5 class="fw-semibold mb-0" id="revenue-total">
                                    <!-- N·ªôi dung ƒë∆∞·ª£c JS c·∫≠p nh·∫≠t -->
                                </h5>
                                <h5 class="fw-semibold mb-0" id="profit-total">
                                    <!-- N·ªôi dung ƒë∆∞·ª£c JS c·∫≠p nh·∫≠t -->
                                </h5>
                            </div>

                            {{-- B·ªô l·ªçc ng√†y --}}
                            <div class="d-flex align-items-center gap-2">
                                <div class="input-group">
                                    <label class="input-group-text bg-white" for="startDate">
                                        <i class="bi bi-calendar-event"></i>
                                    </label>
                                    <input type="date" id="startDate" class="form-control" style="max-width: 160px;">
                                </div>

                                <span class="fw-semibold">‚Äì</span>

                                <div class="input-group">
                                    <label class="input-group-text bg-white" for="endDate">
                                        <i class="bi bi-calendar-check"></i>
                                    </label>
                                    <input type="date" id="endDate" class="form-control" style="max-width: 160px;">
                                </div>

                                <button class="btn btn-primary d-flex align-items-center gap-1" onclick="applyDateFilter()">
                                    <i class="bi bi-funnel-fill"></i> L·ªçc
                                </button>
                            </div>
                        </div>

                        {{-- Bi·ªÉu ƒë·ªì --}}
                        <div class="border rounded bg-light p-3" style="overflow-x: auto;">
                            <canvas id="revenueChart" height="500"></canvas>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        {{-- ƒë∆°n h√†ng theo ng√†y v√† top s·∫£n ph·∫©m b√°n ch·∫°y c·ªßa th√°ng --}}
        <div class="row">
            {{-- ƒë∆°n h√†ng --}}
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-header border-0">
                        <div
                            class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-2">
                            <!-- T·ªïng s·ªë ƒë∆°n -->
                            <h3 id="order-total-text" class="fw-bold mb-0 card-title">
                                T·ªïng s·ªë ƒë∆°n:</h3>

                            <!-- B·ªô l·ªçc ng√†y -->
                            <div class="d-flex align-items-center gap-2">
                                <input type="date" id="orderStartDate" class="form-control"
                                    style="max-width: 160px;">
                                <input type="date" id="orderEndDate" class="form-control" style="max-width: 160px;">
                                <button class="btn btn-primary" onclick="filterOrderChart()">L·ªçc</button>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        {{-- N·∫øu c√≥ bi·ªÉu ƒë·ªì mini cho ƒë∆°n h√†ng h√¥m nay/tu·∫ßn --}}
                        <div class="position-relative mb-4">
                            <canvas id="ordersTodayChart" height="200"></canvas>
                        </div>

                    </div>
                </div>
            </div>

            {{-- s·∫£n ph·∫©m --}}
            <div class="col-lg-6">
                <!-- Ti√™u ƒë·ªÅ -->
                <div class="row mb-4">
                    <div class="col">
                        <h4 class="fw-bold " id="top-products-title">Top s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t
                        </h4>
                    </div>
                </div>
                <!-- begin::san pham ban chay-->
                <div style="max-height: 250px; overflow-y: auto;">
                    <table class="table table-striped align-middle" id="topProductsTable">
                        <tbody>
                            <!-- D·ªØ li·ªáu s·∫£n ph·∫©m s·∫Ω ƒë∆∞·ª£c JS th√™m v√†o ƒë√¢y -->
                        </tbody>
                    </table>
                </div>
                <!-- end::san pham ban chay-->
            </div>
        </div>

        {{-- t·ªïng ƒë∆°n h√†ng theo t·ª´ng tr·∫°ng th√°i c·ªßa th√°ng --}}
        <div class="row">
            {{-- Bi·ªÉu ƒë·ªì t·ª∑ l·ªá hu·ª∑ ƒë∆°n --}}
            <div class="col-lg-3">
                <div class="card mb-4">
                    <h5 class="card-header fw-bold">T·ª∑ l·ªá hu·ª∑ ƒë∆°n</h5>
                    <div class="card-body text-center">
                        <canvas id="cancelRateChart" height="250"></canvas>
                        <div id="cancelRateText" class="mt-3 fw-bold text-danger fs-5"></div>
                    </div>
                </div>
            </div>

            {{-- Bi·ªÉu ƒë·ªì s·ªë ƒë∆°n theo tr·∫°ng th√°i --}}
            <div class="col-lg-9">
                <div class="card mb-4 shadow-sm">
                    {{-- Ti√™u ƒë·ªÅ + B·ªô l·ªçc ng√†y --}}
                    <div class="card-header border-0 bg-light">
                        <div class="row align-items-center">
                            {{-- B√™n tr√°i: Ti√™u ƒë·ªÅ --}}
                            <div class="col-md-6 mb-2 mb-md-0">
                                <h5 class="fw-bold text-primary m-0 d-flex align-items-center">
                                    <i class="bi bi-bar-chart-fill me-2"></i>
                                    Tr·∫°ng th√°i ƒë∆°n h√†ng
                                </h5>
                            </div>

                            {{-- B√™n ph·∫£i: B·ªô l·ªçc ng√†y --}}
                            <div class="col-md-6 text-md-end">
                                <div class="d-flex justify-content-md-end gap-2 align-items-center">
                                    <div class="input-group">
                                        <label class="input-group-text bg-white" for="orderStatusStartDate">
                                            <i class="bi bi-calendar-event"></i>
                                        </label>
                                        <input type="date" id="orderStatusStartDate" class="form-control"
                                            style="max-width: 160px;">
                                    </div>

                                    <span class="fw-semibold">‚Äì</span>

                                    <div class="input-group">
                                        <label class="input-group-text bg-white" for="orderStatusEndDate">
                                            <i class="bi bi-calendar-check"></i>
                                        </label>
                                        <input type="date" id="orderStatusEndDate" class="form-control"
                                            style="max-width: 160px;">
                                    </div>

                                    <button class="btn btn-primary d-flex align-items-center gap-1"
                                        onclick="filterOrderStatusChart()">
                                        <i class="bi bi-funnel-fill"></i> L·ªçc
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    {{-- V√πng ch·ª©a bi·ªÉu ƒë·ªì --}}
                    <div class="card-body">
                        <canvas id="orderStatusChart" height="98"></canvas>
                    </div>

                </div>
            </div>
        </div>

        {{-- s·∫£n ph·∫©m s·∫Øp h·∫øt h√†ng v√† review t·ª´ kh√°ch --}}
        <div class="row">
            <div class="col-lg-6">
                <!-- Ti√™u ƒë·ªÅ -->
                <div class="row mb-4">
                    <div class="col">
                        <h4 class="fw-bold">S·∫£n ph·∫©m s·∫Øp h·∫øt h√†ng</h4>
                    </div>
                </div>
                <!-- begin::san pham sap het-->
                <div style="max-height: 300px; overflow-y: auto;">
                    <table class="table table-striped align-middle mb-0">
                        <tbody id="lowStockTableBody">
                            <!-- D·ªØ li·ªáu s·∫£n ph·∫©m s·∫Ω ƒë∆∞·ª£c JS th√™m v√†o ƒë√¢y -->
                        </tbody>
                    </table>
                </div>
                <!-- end::san pham sap het-->
            </div>

            {{-- ƒê√°nh gi√° m·ªõi ch·ªù duy·ªát --}}
            <div class="col-lg-6">
                <!-- Ti√™u ƒë·ªÅ -->
                <div class="row mb-4">
                    <div class="col d-flex justify-content-between">
                        <h4 class="fw-bold">ƒê√°nh gi√° m·ªõi ch·ªù duy·ªát</h4>
                        <a href ='{{ route('reviews') }}'
                            class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">
                            Xem t·∫•t c·∫£</a>
                    </div>
                </div>

                <!-- begin::ƒë√°nh gi√° m·ªõi-->
                <div style="max-height: 300px; overflow-y: auto;">
                    <table class="table table-striped align-middle mb-0">
                        <thead id='pendingReviewsHead'>

                        </thead>
                        <tbody id="pendingReviewsBody">
                            <!-- D·ªØ li·ªáu ƒë√°nh gi√° s·∫Ω ƒë∆∞·ª£c th√™m b·∫±ng JavaScript -->
                        </tbody>
                    </table>
                    <div class="text-center py-2 text-muted" id="noReviews" style="display: none;">
                        Kh√¥ng c√≥ ƒë√°nh gi√° n√†o ch·ªù duy·ªát.
                    </div>
                </div>
                <!-- end::ƒë√°nh gi√° m·ªõi-->
            </div>
        </div>

    </div>
@endsection

@section('scripts')
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{-- ham dung chung --}}
    <script>
        let refreshInterval = null;

        function autoRefreshChart(startDate, endDate) {
            // Clear interval c≈© n·∫øu c√≥
            if (refreshInterval) {
                clearInterval(refreshInterval);
            }

            // T·∫°o m·ªõi interval ƒë·ªÉ c·∫≠p nh·∫≠t m·ªói 30 gi√¢y
            refreshInterval = setInterval(() => {
                renderRevenueChart(startDate, endDate);
                loadTopSellingProducts(startDate, endDate);
                loadLowStockProducts()
            }, 10000);
        }

        // H√†m format ng√†y th√†nh yyyy-mm-dd (h·ª£p v·ªõi input type="date")
        function formatDate(date) {
            return date.toLocaleDateString('en-CA'); // ƒë√∫ng ƒë·ªãnh d·∫°ng yyyy-mm-dd
        }

        // ƒê·ªãnh d·∫°ng ti·ªÅn t·ªá VNƒê
        function formatCurrency(value) {
            return Number(value).toLocaleString('vi-VN') + '‚Ç´';
        }
    </script>

    {{-- x·ª≠ l√Ω bi·ªÉu ƒë·ªì doanh thu --}}
    <script>
        let monthlyRevenueChart; // Bi·∫øn l∆∞u bi·ªÉu ƒë·ªì ƒë·ªÉ hu·ª∑ v√† v·∫Ω l·∫°i

        // H√†m v·∫Ω bi·ªÉu ƒë·ªì doanh thu & l·ª£i nhu·∫≠n theo kho·∫£ng ng√†y
        function renderRevenueChart(startDate, endDate) {
            fetch(`/admin/statistics/filter-revenue?start=${startDate}&end=${endDate}`)
                .then(res => res.json())
                .then(res => {
                    // L·∫•y nh√£n tr·ª•c X v√† d·ªØ li·ªáu cho bi·ªÉu ƒë·ªì
                    const labels = res.days.map(item => item.day); // ng√†y
                    const revenues = res.days.map(item => item.revenue); // doanh thu t·ª´ng ng√†y
                    const profits = res.days.map(item => item.profit); // l·ª£i nhu·∫≠n t·ª´ng ng√†y

                    // T·∫°o context v·∫Ω bi·ªÉu ƒë·ªì
                    const ctx = document.getElementById('revenueChart').getContext('2d');

                    // Xo√° bi·ªÉu ƒë·ªì c≈© n·∫øu c√≥
                    if (monthlyRevenueChart) {
                        monthlyRevenueChart.destroy();
                    }

                    // V·∫Ω bi·ªÉu ƒë·ªì c·ªôt (doanh thu) + ƒë∆∞·ªùng (l·ª£i nhu·∫≠n)
                    monthlyRevenueChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                    type: 'line',
                                    label: 'L·ª£i nhu·∫≠n (VNƒê)',
                                    data: profits,
                                    borderColor: 'rgba(255, 99, 132, 0.9)', // Xanh ƒë·∫≠m
                                    pointRadius: 5,
                                    pointHoverRadius: 7,
                                    pointBackgroundColor: '#d63384', // Ch·∫•m h·ªìng t∆∞∆°i
                                    pointBorderColor: '#fff', // Vi·ªÅn tr·∫Øng
                                    pointBorderWidth: 2,
                                    tension: 0.4, // L√†m m∆∞·ª£t ƒë∆∞·ªùng
                                    yAxisID: 'y2' // üëâ Tr·ª•c b√™n ph·∫£i
                                },
                                {
                                    type: 'bar',
                                    label: 'Doanh thu (VNƒê)',
                                    data: revenues,
                                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                                    borderRadius: 5,
                                    yAxisID: 'y1' // üëâ Tr·ª•c b√™n tr√°i
                                },

                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y1: {
                                    type: 'linear',
                                    position: 'left',
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Doanh thu'
                                    }
                                },
                                y2: {
                                    type: 'linear',
                                    position: 'right',
                                    beginAtZero: true,
                                    grid: {
                                        drawOnChartArea: false // Kh√¥ng v·∫Ω l∆∞·ªõi b√™n ph·∫£i ƒë·ªÉ kh√¥ng b·ªã r·ªëi
                                    },
                                    title: {
                                        display: true,
                                        text: 'L·ª£i nhu·∫≠n'
                                    }
                                }
                            },
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        label: function(ctx) {
                                            return `${ctx.dataset.label}: ${ctx.parsed.y.toLocaleString('vi-VN')}‚Ç´`;
                                        }
                                    }
                                }
                            }
                        }
                    });

                    // Hi·ªÉn th·ªã ti√™u ƒë·ªÅ theo ng√†y
                    const from = new Date(startDate).toLocaleDateString('vi-VN');
                    const to = new Date(endDate).toLocaleDateString('vi-VN');
                    document.getElementById('revenue-title').innerHTML =
                        `<i class="bi bi-graph-up-arrow me-2"></i>Doanh thu t·ª´ ${from} ƒë·∫øn ${to}`;

                    // Hi·ªÉn th·ªã t·ªïng doanh thu v√† t·ªïng l·ª£i nhu·∫≠n
                    document.getElementById('revenue-total').innerHTML = `
                    <strong>T·ªïng doanh thu:</strong> ${formatCurrency(res.total)}`;

                    document.getElementById('profit-total').innerHTML = `
                    <strong>T·ªïng l·ª£i nhu·∫≠n:</strong> ${formatCurrency(res.total_profit)}`;

                    // N·∫øu c√≥ tƒÉng tr∆∞·ªüng th√¨ hi·ªÉn th·ªã th√™m
                    if (res.growth_rate !== null) {
                        const trend = res.growth_rate >= 0 ? '‚Üë' : '‚Üì';
                        const color = res.growth_rate >= 0 ? 'green' : 'red';
                        const rateText = `${trend} ${Math.abs(res.growth_rate)}%`;

                        document.getElementById('revenue-total').innerHTML +=
                            ` <span style="color: ${color}; font-weight: 500;">(${rateText})</span>`;
                    }
                });
        }

        // Khi nh·∫•n n√∫t l·ªçc
        function applyDateFilter() {
            const startDate = document.getElementById("startDate").value;
            const endDate = document.getElementById("endDate").value;

            if (!startDate || !endDate || startDate > endDate) {
                Swal.fire("L·ªói", "Vui l√≤ng ch·ªçn kho·∫£ng ng√†y h·ª£p l·ªá.", "error");
                return;
            }

            // Ki·ªÉm tra h·ª£p l·ªá
            if (!startDate || !endDate || startDate > endDate) {
                Swal.fire("L·ªói", "Vui l√≤ng ch·ªçn kho·∫£ng ng√†y h·ª£p l·ªá.", "error");
                return;
            }

            // V·∫Ω l·∫°i bi·ªÉu ƒë·ªì doanh thu
            renderRevenueChart(startDate, endDate);

            // V·∫Ω l·∫°i b·∫£ng top s·∫£n ph·∫©m
            loadTopSellingProducts(startDate, endDate);

            autoRefreshChart(startDate, endDate); // üëâ Th√™m d√≤ng n√†y ƒë·ªÉ k√≠ch ho·∫°t realtime
        }

        // M·∫∑c ƒë·ªãnh: Hi·ªÉn th·ªã bi·ªÉu ƒë·ªì 30 ng√†y g·∫ßn nh·∫•t khi trang load
        window.addEventListener('load', () => {
            const today = new Date();
            const pastDate = new Date();
            pastDate.setDate(today.getDate() - 29); // L√πi l·∫°i 29 ng√†y ‚Üí t·ªïng c·ªông 30 ng√†y

            // D√πng ƒë·ªãnh d·∫°ng yyyy-mm-dd v√† ƒë√∫ng m√∫i gi·ªù (kh√¥ng b·ªã UTC)
            const format = (date) => date.toLocaleDateString('en-CA');

            const start = format(pastDate); // Ng√†y b·∫Øt ƒë·∫ßu
            const end = format(today); // Ng√†y h√¥m nay

            // Gi·ªõi h·∫°n kh√¥ng cho ch·ªçn ng√†y trong t∆∞∆°ng lai
            document.getElementById('startDate').setAttribute('max', end);
            document.getElementById('endDate').setAttribute('max', end);

            // G√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh cho input date
            document.getElementById('startDate').value = start;
            document.getElementById('endDate').value = end;

            // Load d·ªØ li·ªáu m·∫∑c ƒë·ªãnh
            renderRevenueChart(start, end);
            loadTopSellingProducts(start, end);
            autoRefreshChart(start, end);
        });
    </script>

    {{-- x·ª≠ l√Ω top s·∫£n ph·∫©m b√°n ch·∫°y --}}
    <script>
        // H√†m t·∫£i d·ªØ li·ªáu v√† hi·ªÉn th·ªã top s·∫£n ph·∫©m b√°n ch·∫°y
        // H√†m l·∫•y v√† render top s·∫£n ph·∫©m b√°n ch·∫°y theo kho·∫£ng ng√†y
        function loadTopSellingProducts(start, end) {
            fetch(`/admin/statistics/top-products?start=${start}&end=${end}`)
                .then(res => res.json())
                .then(products => {
                    const tbody = document.querySelector('#topProductsTable tbody');
                    tbody.innerHTML = ''; // Xo√° d·ªØ li·ªáu c≈©

                    // N·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c b√°n trong kho·∫£ng th·ªùi gian ƒë√≥
                    if (products.length === 0) {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                    <td colspan="6" class="text-center bg-warning bg-opacity-25 text-dark py-4 border rounded">
                        <i class="bi bi-exclamation-triangle me-2 text-warning"></i>
                        Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong kho·∫£ng th·ªùi gian n√†y.
                    </td>
                `;
                        tbody.appendChild(row);
                    } else {
                        // N·∫øu c√≥ s·∫£n ph·∫©m, render t·ª´ng d√≤ng
                        products.forEach(product => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                        <td>
                            <img src="${product.image}" alt="${product.product_name}"
                                 class="rounded-circle img-size-32 me-2" />
                            ${product.product_name}
                        </td>
                        <td>${product.color}</td>
                        <td>${product.size}</td>
                        <td>${parseInt(product.price).toLocaleString()}‚Ç´</td>
                        <td>
                            <small class="text-success me-1">
                                <i class="bi bi-arrow-up"></i>
                                ${product.total_sold} Sold
                            </small>
                        </td>
                        <td>
                            <a href="/admin/products/${product.product_id}" class="text-secondary">
                                <i class="bi bi-search"></i>
                            </a>
                        </td>
                    `;
                            tbody.appendChild(row);
                        });
                    }

                    // ‚úÖ C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ theo kho·∫£ng ng√†y
                    const formattedStart = new Date(start).toLocaleDateString('vi-VN');
                    const formattedEnd = new Date(end).toLocaleDateString('vi-VN');

                    document.getElementById('top-products-title').textContent =
                        `Top s·∫£n ph·∫©m b√°n ch·∫°y (${formattedStart} - ${formattedEnd})`;
                });
        }
    </script>

    {{-- x·ª≠ l√Ω bi·ªÉu ƒë·ªì ƒë∆°n h√†ng trong 7 ng√†y g·∫ßn nh·∫•t --}}
    <script>
        let ordersChart;
        let orderInterval; // Bi·∫øn l∆∞u interval ƒë·ªÉ clear khi c·∫ßn

        // H√†m t·ª± ƒë·ªông l√†m m·ªõi bi·ªÉu ƒë·ªì m·ªói 30 gi√¢y
        function autoRefreshOrderChart() {
            if (orderInterval) clearInterval(orderInterval);

            orderInterval = setInterval(() => {
                const startDate = document.getElementById("orderStartDate").value;
                const endDate = document.getElementById("orderEndDate").value;

                if (startDate && endDate && startDate <= endDate) {
                    renderOrdersChart(startDate, endDate);
                }
            }, 9900);
        }

        // H√†m v·∫Ω bi·ªÉu ƒë·ªì ƒë∆°n h√†ng theo ng√†y
        function renderOrdersChart(startDate, endDate) {
            fetch(`/admin/statistics/orders-per-day?start=${startDate}&end=${endDate}`)
                .then(res => res.json())
                .then(res => {
                    const labels = res.days.map(item =>
                        new Date(item.date).toLocaleDateString('vi-VN', {
                            day: '2-digit',
                            month: '2-digit'
                        })
                    );
                    const totals = res.days.map(item => item.total);

                    const ctx = document.getElementById('ordersTodayChart').getContext('2d');

                    // Xo√° bi·ªÉu ƒë·ªì c≈© n·∫øu ƒë√£ t·ªìn t·∫°i
                    if (ordersChart) {
                        ordersChart.destroy();
                    }

                    // V·∫Ω bi·ªÉu ƒë·ªì m·ªõi
                    ordersChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels, // Nh√£n tr·ª•c X (d·∫°ng dd/mm)
                            datasets: [{
                                label: 'S·ªë ƒë∆°n h√†ng',
                                data: totals,
                                fill: true,
                                backgroundColor: 'rgba(72, 209, 204, 0.4)', // Xanh ng·ªçc nh·∫°t
                                borderColor: 'rgba(219, 112, 147, 0.8)', // H·ªìng ƒë·∫≠m
                                tension: 0.3,
                                pointRadius: 6, // tƒÉng k√≠ch th∆∞·ªõc
                                pointHoverRadius: 8, // khi hover
                                pointBackgroundColor: 'rgba(0,128,128, 1)', // m√†u n·ªÅn ch·∫•m
                                pointBorderColor: '#fff', // vi·ªÅn tr·∫Øng
                                pointBorderWidth: 2,
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1 // Hi·ªÉn th·ªã t·ª´ng b∆∞·ªõc 1 ƒë∆°n
                                    }
                                }
                            },
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        title: ctx => 'Ng√†y: ' + ctx[0].label,
                                        label: ctx => `T·ªïng ƒë∆°n: ${ctx.parsed.y}`
                                    }
                                },
                                legend: {
                                    display: false // ·∫®n ch√∫ th√≠ch bi·ªÉu ƒë·ªì
                                }
                            }
                        },
                    });

                    // ‚úÖ C·∫≠p nh·∫≠t t·ªïng ƒë∆°n theo kho·∫£ng ng√†y
                    const from = new Date(startDate).toLocaleDateString('vi-VN');
                    const to = new Date(endDate).toLocaleDateString('vi-VN');
                    document.getElementById('order-total-text').innerHTML =
                        `<i class="bi bi-box-seam me-1"></i>T·ªïng s·ªë ƒë∆°n h√†ng: ${res.total_orders}`;
                })
                .catch(error => {
                    console.error('L·ªói khi t·∫£i d·ªØ li·ªáu bi·ªÉu ƒë·ªì ƒë∆°n h√†ng:', error);
                    Swal.fire('L·ªói', 'Kh√¥ng th·ªÉ t·∫£i bi·ªÉu ƒë·ªì ƒë∆°n h√†ng.', 'error');
                });
        }

        // H√†m l·ªçc khi nh·∫•n n√∫t
        function filterOrderChart() {
            const start = document.getElementById("orderStartDate").value;
            const end = document.getElementById("orderEndDate").value;

            if (!start || !end || start > end) {
                Swal.fire("L·ªói", "Vui l√≤ng ch·ªçn kho·∫£ng ng√†y h·ª£p l·ªá", "error");
                return;
            }

            renderOrdersChart(start, end);
        }

        // Khi load trang: m·∫∑c ƒë·ªãnh 7 ng√†y g·∫ßn nh·∫•t
        window.addEventListener('load', () => {
            const today = new Date();
            const past = new Date();
            past.setDate(today.getDate() - 6);

            const start = formatDate(past);
            const end = formatDate(today);

            // G√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh cho input
            document.getElementById('orderStartDate').value = start;
            document.getElementById('orderEndDate').value = end;

            // üëâ Gi·ªõi h·∫°n t·ªëi ƒëa l√† h√¥m nay (kh√¥ng cho ch·ªçn ng√†y t∆∞∆°ng lai)
            document.getElementById('orderStartDate').setAttribute('max', end);
            document.getElementById('orderEndDate').setAttribute('max', end);

            renderOrdersChart(start, end);
            autoRefreshOrderChart(start, end)
        });
    </script>

    {{-- x·ª≠ l√Ω bi·ªÉu ƒë·ªì t·ª∑ l·ªá hu·ª∑ ƒë∆°n v√† s·ªë ƒë∆°n --}}
    <script>
        let orderStatusChart;
        let cancelRateChart;
        let orderStatusInterval; // Bi·∫øn l∆∞u interval ƒë·ªÉ clear khi c·∫ßn

        // H√†m t·ª± ƒë·ªông l√†m m·ªõi bi·ªÉu ƒë·ªì m·ªói 30 gi√¢y
        function autoRefreshOrderStatusChart() {
            // Clear interval c≈© n·∫øu c√≥
            if (orderStatusInterval) clearInterval(orderStatusInterval);

            orderStatusInterval = setInterval(() => {
                const start = document.getElementById("orderStatusStartDate").value;
                const end = document.getElementById("orderStatusEndDate").value;

                // Ch·ªâ g·ªçi l·∫°i n·∫øu ng√†y h·ª£p l·ªá
                if (start && end && start <= end) {
                    loadOrderStatusChart(start, end);
                }
            }, 10000);
        }


        // H√†m g·ªçi API v√† v·∫Ω bi·ªÉu ƒë·ªì
        function loadOrderStatusChart(start, end) {
            fetch(`/admin/statistics/order-status?start=${start}&end=${end}`)
                .then(res => res.json())
                .then(data => {
                    const labels = ['Tr·∫°ng th√°i'];
                    const statusData = data.counts;

                    // Hu·ª∑ bi·ªÉu ƒë·ªì c≈©
                    if (orderStatusChart) orderStatusChart.destroy();
                    if (cancelRateChart) cancelRateChart.destroy();

                    // Bi·ªÉu ƒë·ªì tr·∫°ng th√°i
                    const ctx = document.getElementById('orderStatusChart').getContext('2d');
                    orderStatusChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                    label: 'Ch·ªù x·ª≠ l√Ω',
                                    data: [statusData[0]],
                                    backgroundColor: '#ffc107'
                                },
                                {
                                    label: 'ƒêang x·ª≠ l√Ω',
                                    data: [statusData[1]],
                                    backgroundColor: '#0d6efd'
                                },
                                {
                                    label: 'ƒêang giao',
                                    data: [statusData[2]],
                                    backgroundColor: '#17a2b8'
                                },
                                {
                                    label: 'ƒê√£ giao',
                                    data: [statusData[3]],
                                    backgroundColor: '#339966'
                                },
                                {
                                    label: 'ƒê√£ ho√†n th√†nh',
                                    data: [statusData[4]],
                                    backgroundColor: '#004400'
                                },
                                {
                                    label: 'ƒê√£ hu·ª∑',
                                    data: [statusData[5]],
                                    backgroundColor: '#dc3545'
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: {
                                    display: true
                                },
                                tooltip: {
                                    callbacks: {
                                        label: ctx => `${ctx.dataset.label}: ${ctx.parsed.y} ƒë∆°n`
                                    }
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        stepSize: 1
                                    }
                                }
                            }
                        }
                    });

                    // Bi·ªÉu ƒë·ªì t·ª∑ l·ªá hu·ª∑
                    const pieCtx = document.getElementById('cancelRateChart').getContext('2d');
                    cancelRateChart = new Chart(pieCtx, {
                        type: 'doughnut',
                        data: {
                            labels: ['Hu·ª∑ ƒë∆°n', 'Kh√°c'],
                            datasets: [{
                                data: [data.cancelRate, 100 - data.cancelRate],
                                backgroundColor: ['#dc3545', '#6c757d']
                            }]
                        },
                        options: {
                            cutout: '70%',
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                }
                            }
                        }
                    });

                    document.getElementById('cancelRateText').textContent =
                        `${data.cancelRate}% ƒë∆°n h√†ng b·ªã hu·ª∑`;
                });
        }

        // N√∫t l·ªçc
        function filterOrderStatusChart() {
            const start = document.getElementById("orderStatusStartDate").value;
            const end = document.getElementById("orderStatusEndDate").value;

            if (!start || !end || start > end) {
                Swal.fire("L·ªói", "Vui l√≤ng ch·ªçn kho·∫£ng ng√†y h·ª£p l·ªá", "error");
                return;
            }

            loadOrderStatusChart(start, end);
        }

        // Khi trang load
        window.addEventListener('DOMContentLoaded', function() {
            const today = new Date();
            const past = new Date();
            past.setDate(today.getDate() - 29);

            const start = formatDate(past);
            const end = formatDate(today);

            document.getElementById('orderStatusStartDate').value = start;
            document.getElementById('orderStatusEndDate').value = end;
            document.getElementById('orderStatusStartDate').setAttribute('max', end);
            document.getElementById('orderStatusEndDate').setAttribute('max', end);

            loadOrderStatusChart(start, end);
            // B·∫Øt ƒë·∫ßu realtime
            autoRefreshOrderStatusChart();
        });
    </script>

    {{-- x·ª≠ l√Ω load s·∫£n ph·∫©m s·∫Øp h·∫øt h√†ng --}}
    <script>
        // H√†m load s·∫£n ph·∫©m g·∫ßn h·∫øt h√†ng
        function loadLowStockProducts() {
            fetch('/admin/statistics/low-stock')
                .then(res => res.json())
                .then(data => {
                    const tbody = document.getElementById('lowStockTableBody');
                    tbody.innerHTML = '';

                    if (data.length === 0) {
                        tbody.innerHTML = `
                        <tr>
                            <td colspan="5" class="text-center text-muted">Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o g·∫ßn h·∫øt h√†ng</td>
                        </tr>`;
                        return;
                    }

                    data.forEach(variant => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                        <td>
                            <img src="/${variant.image ?? 'default.png'}" alt="·∫¢nh" class="img-size-32 rounded-circle me-2" width="32" height="32">
                            <a href="/admin/products/${variant.product.id}">${variant.product.name}</a>
                        </td>
                        <td>${variant.color ?? ''}</td>
                        <td>${variant.size ?? ''}</td>
                        <td>${Number(variant.price).toLocaleString()}‚Ç´</td>
                        <td class="fw-bold text-danger">${variant.stock_quantity}</td>
                    `;
                        tbody.appendChild(row);
                    });
                });
        }

        // G·ªçi h√†m khi trang t·∫£i xong
        window.addEventListener('load', loadLowStockProducts);
    </script>

    {{-- x·ª≠ l√Ω hi·ªÉn th·ªã ƒë√°nh gi√° m·ªõi ch∆∞a duy·ªát --}}
    <script>
        // G·ªçi AJAX ƒë·ªÉ l·∫•y c√°c ƒë√°nh gi√° ch∆∞a duy·ªát
        function loadPendingReviews() {
            fetch('/admin/statistics/pending-reviews')
                .then(res => res.json())
                .then(data => {
                    const tbody = document.getElementById('pendingReviewsBody');
                    const thead = document.getElementById('pendingReviewsHead');
                    const noData = document.getElementById('noReviews');
                    tbody.innerHTML = '';
                    thead.innerHTML = '';

                    if (data.length === 0) {
                        noData.style.display = 'block';
                        return;
                    } else {
                        noData.style.display = 'none';
                        thead.innerHTML = `
                    <tr>
                                <th>Ng∆∞·ªùi d√πng</th>
                                <th>S·∫£n ph·∫©m</th>
                                <th>N·ªôi dung</th>
                                <th>Sao</th>
                                <th>H√†nh ƒë·ªông</th>
                            </tr>
                            `;
                    }

                    data.forEach(review => {
                        const row = document.createElement('tr');

                        row.innerHTML = `
                            <td>${review.user?.name || '·∫®n danh'}</td>
                            <td>${review.product?.name || 'Kh√¥ng x√°c ƒë·ªãnh'}</td>
                            <td>${review.comment || 'Kh√¥ng c√≥ n·ªôi dung'}</td>
                            <td><span class="badge bg-warning text-dark">${review.rating} ‚òÖ</span></td>
                            <td>
                            <!-- N√∫t duy·ªát ƒë√°nh gi√° -->
                            <button class="btn btn-success btn-sm me-1"
                            onclick="approveReview(${review.id})" title="Duy·ªát ƒë√°nh gi√°">
                            <i class="bi bi-check-circle"></i>
                            </button>
                        `;
                        tbody.appendChild(row);
                    });
                });
        }

        // G·ªçi h√†m khi load trang
        window.addEventListener('load', loadPendingReviews);

        function approveReview(id) {
            fetch(`/reviews/${id}/approve`, {
                method: 'POST',
                headers: {
                    'X-CSRF-TOKEN': '{{ csrf_token() }}',
                    'Content-Type': 'application/json'
                }
            }).then(res => {
                if (res.ok) {
                    // ‚úÖ Hi·ªÉn th·ªã th√¥ng b√°o SweetAlert khi duy·ªát th√†nh c√¥ng
                    Swal.fire({
                        icon: 'success',
                        title: 'ƒê√£ duy·ªát!',
                        text: 'ƒê√°nh gi√° ƒë√£ ƒë∆∞·ª£c duy·ªát th√†nh c√¥ng.',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    loadPendingReviews(); // Reload l·∫°i b·∫£ng sau khi duy·ªát
                } else {
                    Swal.fire('L·ªói', 'Duy·ªát kh√¥ng th√†nh c√¥ng!', 'error');
                }
            });
        }

        // Xo√° ƒë√°nh gi√°
        function deleteReview(id) {
            Swal.fire({
                title: 'B·∫°n c√≥ ch·∫Øc mu·ªën xo√°?',
                text: 'Thao t√°c n√†y s·∫Ω xo√° vƒ©nh vi·ªÖn ƒë√°nh gi√°!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xo√°',
                cancelButtonText: 'Hu·ª∑'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/reviews/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}'
                        }
                    }).then(res => {
                        if (res.ok) {
                            // ‚úÖ Hi·ªÉn th·ªã th√¥ng b√°o SweetAlert khi xo√° th√†nh c√¥ng
                            Swal.fire({
                                icon: 'success',
                                title: 'ƒê√£ xo√°!',
                                text: 'ƒê√°nh gi√° ƒë√£ ƒë∆∞·ª£c xo√°.',
                                timer: 2000,
                                showConfirmButton: false
                            });
                            loadPendingReviews();
                        } else {
                            Swal.fire('L·ªói', 'Xo√° kh√¥ng th√†nh c√¥ng!', 'error');
                        }
                    });
                }
            });
        }
    </script>

    {{-- // T·∫£i danh s√°ch y√™u c·∫ßu tr·∫£ h√†ng m·ªõi nh·∫•t --}}
    <script>
        function loadLatestReturnRequests() {
            fetch('/admin/statistics/latest-return-requests')
                .then(res => res.json())
                .then(data => {
                    const tbody = document.getElementById('returnRequestsBody');
                    const thead = document.getElementById('returnRequestsHead');
                    const noData = document.getElementById('noReturnRequests');

                    tbody.innerHTML = '';
                    thead.innerHTML = '';

                    if (data.length === 0) {
                        noData.style.display = 'block';
                        return;
                    } else {
                        noData.style.display = 'none';
                    }

                    data.forEach(item => {
                        const row = document.createElement('tr');
                        let actionHtml = '';

                        if (item.status === 'requested') {
                            actionHtml = `
                                <button class="btn btn-success btn-sm me-1"
                                    onclick="handleReturnAction(${item.id}, 'approved')">
                                    <i class="bi bi-check-circle"></i> Duy·ªát
                                </button>
                                <button class="btn btn-danger btn-sm"
                                    onclick="handleReturnAction(${item.id}, 'rejected')">
                                    <i class="bi bi-x-circle"></i> T·ª´ ch·ªëi
                                </button>
                            `;
                        } else if (item.status === 'approved') {
                            const paymentMethod = item.order?.payment_method;
                            const paymentStatus = item.order?.payment_status;

                            const showRefundButton = paymentMethod === 'online' && paymentStatus ===
                                'completed';
                            const label = showRefundButton ? 'Ho√†n t·∫•t ho√†n ti·ªÅn' : 'Ho√†n t·∫•t ho√†n h√†ng';

                            actionHtml = `
                                <button class="btn btn-primary btn-sm"
                                    onclick="handleReturnAction(${item.id}, 'refunded')">
                                    <i class="bi bi-check-lg"></i> ${label}
                                </button>
                            `;
                        }


                        row.innerHTML = `
                        <td>${item.order.shipping_address?.name || '·∫®n danh'}</td>
                        <td>#${item.order?.order_code || 'Kh√¥ng r√µ'}</td>
                        <td>${item.order?.shipping_address?.phone_number || 'Kh√¥ng r√µ s·ªë ƒëi·ªán tho·∫°i'}</td>
                        <td>
                            <span class="badge" style="background-color: ${getPaymentMethod(item.order?.payment_method).color};">
                                ${getPaymentMethod(item.order?.payment_method).label}
                            </span>
                        </td>
                        <td>
                            <span class="badge" style="background-color: ${getPaymentStatus(item.order?.payment_status).color};">
                                ${getPaymentStatus(item.order?.payment_status).label}
                            </span>
                        </td>
                        <td>${new Date(item.created_at).toLocaleDateString('vi-VN')}</td>
                        <td>
                            <span class="badge ${getReturnStatusBadge(item.status).class}">
                                ${getReturnStatusBadge(item.status).label}
                            </span>
                        </td>
                        <td>${actionHtml}</td>
                    `;

                        tbody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error("L·ªói khi t·∫£i danh s√°ch y√™u c·∫ßu tr·∫£ h√†ng:", error);
                });
        }

        // G·ªçi h√†m khi trang load
        window.addEventListener('DOMContentLoaded', loadLatestReturnRequests);

        // H√†m x·ª≠ l√Ω duy·ªát ho·∫∑c t·ª´ ch·ªëi y√™u c·∫ßu tr·∫£ h√†ng
        function handleReturnAction(id, status) {
            // X√°c nh·∫≠n l·∫°i v·ªõi ng∆∞·ªùi d√πng
            let actionText = '';

            switch (status) {
                case 'approved':
                    actionText = 'duy·ªát';
                    break;
                case 'rejected':
                    actionText = 't·ª´ ch·ªëi';
                    break;
                case 'refunded':
                    actionText = 'ƒë√°nh d·∫•u ƒë√£ ho√†n t·∫•t';
                    break;
                default:
                    actionText = 'c·∫≠p nh·∫≠t';
            }

            Swal.fire({
                title: `B·∫°n ch·∫Øc ch·∫Øn mu·ªën ${actionText} y√™u c·∫ßu n√†y?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'X√°c nh·∫≠n',
                cancelButtonText: 'H·ªßy'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/admin/return-requests/${id}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]')
                                    .getAttribute('content')
                            },
                            body: JSON.stringify({
                                status: status
                            })
                        })
                        .then(res => {
                            if (res.redirected) {
                                window.location.href = res.url; // N·∫øu Laravel redirect, t·ª± chuy·ªÉn trang
                                return;
                            }

                            if (!res.ok) throw new Error('L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i');

                            return res.json();
                        })
                        .then(data => {
                            Swal.fire({
                                title: '‚úÖ Th√†nh c√¥ng',
                                text: 'Tr·∫°ng th√°i ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.',
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            });
                            loadLatestReturnRequests(); // G·ªçi l·∫°i ƒë·ªÉ refresh
                        })
                        .catch(err => {
                            Swal.fire('L·ªói', err.message || 'C·∫≠p nh·∫≠t th·∫•t b·∫°i!', 'error');
                        });
                }
            });
        }

        function getPaymentMethod(method) {
            const methods = {
                'cod': {
                    label: 'Thanh to√°n khi nh·∫≠n h√†ng',
                    color: '#CC6666'
                },
                'online': {
                    label: 'Thanh to√°n tr·ª±c tuy·∫øn',
                    color: '#6699CC'
                },
                'bank_transfer': {
                    label: 'Thanh to√°n qua ng√¢n h√†ng',
                    color: '#CC66CC'
                },
            };

            return methods[method] || {
                label: 'Kh√¥ng x√°c ƒë·ªãnh',
                color: '#999'
            };
        }

        function getPaymentStatus(status) {
            const paymentStatuses = {
                'pending': {
                    label: 'Ch·ªù thanh to√°n',
                    color: '#FF9966'
                },
                'completed': {
                    label: 'ƒê√£ thanh to√°n',
                    color: '#009900'
                },
                'failed': {
                    label: 'Thanh to√°n th·∫•t b·∫°i',
                    color: '#666666'
                },
            };

            return paymentStatuses[status] || {
                label: 'Kh√¥ng x√°c ƒë·ªãnh',
                color: '#999'
            };
        }

        function getReturnStatusBadge(status) {
            const statuses = {
                'requested': {
                    label: 'Ch·ªù x·ª≠ l√Ω',
                    class: 'bg-warning text-dark'
                },
                'approved': {
                    label: 'ƒê√£ duy·ªát',
                    class: 'bg-success'
                },
                'rejected': {
                    label: 'T·ª´ ch·ªëi',
                    class: 'bg-danger'
                },
                'refunded': {
                    label: 'Y√™u c·∫ßu ho√†n t·∫•t',
                    class: 'bg-primary'
                },
            };
            return statuses[status] || {
                label: 'Kh√¥ng x√°c ƒë·ªãnh',
                class: 'bg-secondary'
            };
        }
    </script>

    {{-- th√¥ng b√°o m·ªõi nh·∫•t --}}
    <script>
        let currentPage = 1;

        function loadUserNotifications(page = 1) {
            fetch(`/admin/statistics/latest-notifications?page=${page}`)
                .then(res => res.json())
                .then(data => {
                    const noData = document.getElementById('noNotifications');
                    const carouselInner = document.getElementById('carouselNotificationInner');
                    const pagination = document.getElementById('paginationControls');
                    currentPage = data.pagination?.current_page || 1;

                    const notifications = data.notifications || [];

                    // ‚úÖ Hi·ªÉn th·ªã th√¥ng b√°o theo d·∫°ng slide
                    if (notifications.length > 0) {
                        noData.style.display = 'none';
                        carouselInner.innerHTML = notifications.map((item, index) => `
                        <div class="carousel-item ${index === 0 ? 'active' : ''}">
                            <div class="p-2 text-dark small">
                                <span class="fw-semibold">${item.title}</span><br>
                                <small class="text-muted">${new Date(item.created_at).toLocaleString('vi-VN')}</small><br>
                                <span>${item.message}</span>
                            </div>
                        </div>
                    `).join('');
                    } else {
                        noData.style.display = 'block';
                        carouselInner.innerHTML = '';
                    }

                    // ‚úÖ Ph√¢n trang
                    renderPagination(data.pagination);
                })
                .catch(error => {
                    console.error("L·ªói khi t·∫£i th√¥ng b√°o:", error);
                });
        }

        function renderPagination(paginationData) {
            const pagination = document.getElementById('paginationControls');
            pagination.innerHTML = '';

            if (!paginationData || paginationData.last_page <= 1) return;

            const current = paginationData.current_page;
            const last = paginationData.last_page;

            if (current > 1) {
                pagination.innerHTML += `
                <li class="page-item"><a class="page-link" href="#" onclick="loadUserNotifications(${current - 1}); return false;">¬´</a></li>
            `;
            }

            for (let i = 1; i <= last; i++) {
                pagination.innerHTML += `
                <li class="page-item ${i === current ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadUserNotifications(${i}); return false;">${i}</a>
                </li>
            `;
            }

            if (current < last) {
                pagination.innerHTML += `
                <li class="page-item"><a class="page-link" href="#" onclick="loadUserNotifications(${current + 1}); return false;">¬ª</a></li>
            `;
            }
        }

        // G·ªçi khi trang load
        window.addEventListener('DOMContentLoaded', () => loadUserNotifications());
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const head = document.getElementById('cancelRequestTableHead');
            const body = document.getElementById('cancelRequestTableBody');
            const noData = document.getElementById('cancelRequestNoData');

            let lastDataJSON = ''; // ƒê·ªÉ ki·ªÉm tra thay ƒë·ªïi d·ªØ li·ªáu

            function fetchCancelRequests() {
                fetch('/admin/orders/cancel-requests/today')
                    .then(response => response.json())
                    .then(data => {
                        const currentDataJSON = JSON.stringify(data);

                        // N·∫øu d·ªØ li·ªáu kh√¥ng thay ƒë·ªïi th√¨ kh√¥ng render l·∫°i
                        if (currentDataJSON === lastDataJSON) return;
                        lastDataJSON = currentDataJSON;

                        // Reset b·∫£ng
                        head.innerHTML = '';
                        body.innerHTML = '';
                        noData.style.display = 'none';

                        // Kh√¥ng c√≥ d·ªØ li·ªáu
                        if (!Array.isArray(data) || data.length === 0) {
                            noData.style.display = 'block';
                            return;
                        }

                        // Render ph·∫ßn ƒë·∫ßu b·∫£ng
                        head.innerHTML = `
                    <tr>
                        <th>Kh√°ch h√†ng</th>
                        <th>SƒêT</th>
                        <th>Th·ªùi gian</th>
                        <th>L√Ω do hu·ª∑</th>
                        <th>H√†nh ƒë·ªông</th>
                    </tr>
                `;

                        // Render d·ªØ li·ªáu t·ª´ng d√≤ng
                        data.forEach((order) => {
                            body.innerHTML += `
                        <tr>
                            <td>${order.user?.name ?? '<i>·∫®n danh</i>'}</td>
                            <td>${order.shipping_address?.phone_number ?? '<i>·∫®n danh</i>'}</td>
                            <td>${new Date(order.created_at).toLocaleString('vi-VN')}</td>
                            <td>
                                ${order.cancel_reason
                                    ? `<em>${order.cancel_reason}</em>`
                                    : '<span class="text-muted fst-italic">Kh√¥ng c√≥</span>'}
                            </td>
                            <td>
                                <!-- Duy·ªát -->
                                <button class="btn btn-success btn-sm me-1"
                                    onclick="handleCancelAction(${order.id}, 'approve',
                                     '${escapeJs(order.cancel_reason)}', '${escapeJs(order.user?.name)}')">
                                    <i class="bi bi-check-circle"></i> Duy·ªát
                                </button>

                                <!-- T·ª´ ch·ªëi -->
                                <button class="btn btn-danger btn-sm"
                                    onclick="handleCancelAction(${order.id}, 'reject',
                                     '${escapeJs(order.cancel_reason)}', '${escapeJs(order.user?.name)}')">
                                    <i class="bi bi-x-circle"></i> T·ª´ ch·ªëi
                                </button>
                            </td>
                        </tr>
                    `;
                        });
                    })
                    .catch(error => {
                        console.error('L·ªói khi t·∫£i y√™u c·∫ßu hu·ª∑ ƒë∆°n:', error);
                        head.innerHTML = '';
                        body.innerHTML = '';
                        noData.style.display = 'block';
                        noData.textContent = 'Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu y√™u c·∫ßu hu·ª∑ ƒë∆°n.';
                    });
            }

            // G·ªçi l·∫ßn ƒë·∫ßu khi trang load
            fetchCancelRequests();

            // Thi·∫øt l·∫≠p c·∫≠p nh·∫≠t m·ªói 10 gi√¢y
            setInterval(fetchCancelRequests, 10000); // 10000ms = 10s
        });

        function escapeJs(str) {
            if (!str) return '';
            return str.replace(/\\/g, '\\\\')
                .replace(/'/g, "\\'")
                .replace(/"/g, '\\"')
                .replace(/\n/g, '\\n')
                .replace(/\r/g, '');
        }


        function handleCancelAction(orderId, action, customerReason = '', customerName = '') {
            const actionLabel = action === 'approve' ? 'X√°c nh·∫≠n y√™u c·∫ßu hu·ª∑ ƒë∆°n' : 'T·ª´ ch·ªëi y√™u c·∫ßu hu·ª∑';
            const actionColor = action === 'approve' ? '#198754' : '#dc3545'; // xanh ho·∫∑c ƒë·ªè

            const htmlContent = `
                <div class="text-start">
                    <label class="form-label fw-bold text-dark mb-1">
                        <i class="bi bi-person-fill text-primary me-1"></i> L√Ω do kh√°ch y√™u c·∫ßu hu·ª∑:
                    </label>
                    <div class="bg-light border rounded p-2 mb-3">
                        ${customerReason
                            ? `<em>${customerReason}</em>`
                            : '<span class="text-muted fst-italic">Kh√¥ng c√≥ l√Ω do ƒë∆∞·ª£c cung c·∫•p.</span>'}
                    </div>

                    <div class="d-flex flex-column">
                        <label for="adminReason" class="form-label fw-bold text-dark mb-1">
                        <i class="bi bi-shield-lock-fill text-danger me-1"></i> L√Ω do c·ªßa b·∫°n:
                    </label>
                    <textarea id="adminReason" class="swal2-textarea" placeholder="Nh·∫≠p l√Ω do c·ªßa b·∫°n..." rows="3"></textarea>
                    </div>
                </div>
            `;

            Swal.fire({
                title: `${actionLabel} t·ª´ kh√°ch h√†ng ${customerName || '·∫®n danh'}`,
                html: htmlContent,
                showCancelButton: true,
                confirmButtonText: 'X√°c nh·∫≠n',
                confirmButtonColor: actionColor,
                cancelButtonText: 'H·ªßy',
                focusConfirm: false,
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-secondary'
                },
                preConfirm: () => {
                    const reason = document.getElementById('adminReason')?.value.trim();
                    if (!reason || reason.length < 10) {
                        Swal.showValidationMessage('L√Ω do ph·∫£i c√≥ √≠t nh·∫•t 10 k√Ω t·ª±.');
                        return false;
                    }
                    return reason;
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const adminNote = result.value;

                    fetch(`/admin/orders/cancel-request/${orderId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute(
                                    'content')
                            },
                            body: JSON.stringify({
                                action: action,
                                admin_cancel_note: adminNote
                            })
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Th√†nh c√¥ng',
                                    text: data.success,
                                    timer: 2000,
                                    showConfirmButton: false
                                }).then(() => location.reload());
                            } else {
                                Swal.fire('L·ªói', data.error || 'ƒê√£ x·∫£y ra l·ªói khi x·ª≠ l√Ω y√™u c·∫ßu.', 'error');
                            }
                        })
                        .catch(err => {
                            console.error(err);
                            Swal.fire('L·ªói', 'Kh√¥ng th·ªÉ g·ª≠i y√™u c·∫ßu. Vui l√≤ng th·ª≠ l·∫°i sau.', 'error');
                        });
                }
            });
        }
    </script>
@endsection
